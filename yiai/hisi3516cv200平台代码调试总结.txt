2016/07/05硬件调试总结：
1.硬件调试第一阶段：系统启动问题.
刚刚开始8块PCB，只有一块boot可以启动.其它7快表现位system start或者没有串口输出.
表现位systemstart输出问题的PCB，硬件查找问题都是DDR焊接问题.
2.改正DDR焊接问题后，所有板子都无法加载USB驱动，加载USB驱动后就会立即Kernel panic.
 该问题暂时定位为软件问题：
2.1 尝试解决办法.
A.用不同版本的SDK分别测试.问题都一样没法修正.暂时排除软件版本问题;
B.在Boot里面移植DDR测试的代码，测试DDR是否完全焊接正常.表现为DDR完全正常.
C.最后解决办法，硬件查找定位为CPU焊接问题.

**********************************************************************************************************
2.硬件调试第二阶段.各个模块功能调试.
1.图像sersor调试.
利用SDK版本里面MN34222驱动，可以让sensor出图，但是图像偏绿色.
尝试解决办法：
1.1利用hisi提供的PQ图像调节工具进行图像质量调优.但是把相关所有的参数都调试过.却无法找到问题所在.绿的很不正常.
1.2查找Sersor的规格书.对必MN34227和MN34222之间的差异，发现有个IRCUT分量的差异.于是查看驱动相关的代码.发现代码里面有相关注释说明MN34***各种sensor之间的差异，按照说明
修改驱动部分代码，就能够出正常图像.

总结：该问题首先查找问题的流程就出现问题.hisi提供驱动里面在硬件正常情况下应该可以出比较正常的图片.
正确流程应该：
A.首先确定硬件问题。
B.通看一片驱动代码.特别是驱动代码里面的一下说明文档，和注释部分;查找当前sensor和提供的lib是否有一些特性的差异。重点关注相关差异部分代码。能够更快定位问题所在.

**********************************************************************************************************
2.MIC和功放的调节.
利用hisi提供的sample对mic进行录制声音和播放PCM.MIC和喇叭都无法提供正常输出.
尝试办法：
1.硬件排除.直接通过耳机部分对功放和蓝牙部分对MIC电路进行确定，确定两部分功能电路都正常.
2.mic录音部分，调试后发现录制的声音应该选择lpcm协议，才能用Audacity 1.3 Beta (Unicode)软件直接进行播放.同时需要配合电路进行代码调试.
  差分输入，mic增益.输出编码.
3.功放部分一直没有声音输出.主要在于因为hisi demo i2s输出在左声道，我们硬件输出在右声道.导致demo无法正常输出.

总结正常解决办法：
1.首先硬件功能确认，可以通过硬件那边测试相应参数.
2.原理图对应功能模块必须了解.比如功放的控制IO口，I2S的输出IO口复用.功放喇叭输出IO口.
3.确定电气连接都正常.主要通过IO复用的办法，用示波器测试对应IO是否电气连接正常了（这一步很重要，接下来所有模块都需要对这一部分功能进行预先确认才接入调试阶段.）
4.针对硬件部分对代码相应部分进行调试.

**********************************************************************************************************

3.蓝牙语音功能调试:
主要是对IO口进行调试.确定电气连接比较简单.

**********************************************************************************************************
4.2.4G遥控模块进行通信.
表现：
SPICLK和CSN没有高低电平.
尝试办法：
1.参考各种SPI驱动读写的方式.理解SPI驱动应用相关的操作办法.都没法解决.
2.打算对IO口进行模拟SPI读写.但是感觉太过于复杂，没有操作.
3.用逻辑分析仪对必遥控和主板相关的通信协议逻辑.

解决办法：
1.没有波形的问题.主要在于IO没有复用...~_~
2.有波形后，无法读取2.4G芯片的寄存器数据.最后查找原因在于spi通信速率和通信模式选择不正确导致.


这个模块调试耗时过长.解决问题不足的地方：
1.对于SPI的实际操作流程不够熟悉，16bit 和8bit的方式读取不熟，无法首先从代码角度判断是代码问题还是硬件问题.
2.对于硬件工作不熟.首先没有做电气连接性能确定.有的模块IO口没有正确连接.导致调试工作表现不一致.
3.没有仔细看IC的规格书.对于一些关键的参数，比如通信速率和通信mode一定要和代码里面对应！否则永远也找不到问题所在.
4.硬件功能确定.比如晶振有没有起震.reset口看有没有复位等等.(前期调试的硬件)


**********************************************************************************************************
5.FM模块调试
FM模块是标准的i2c控制.调试过程中根据sample提供例程.
需要注意的点.写入频率和打开FM发送的顺序不能错误.
因为写入发射频率的寄存器和发射开关共用了register0 寄存器.写入频率后，需要程序打开发射开关！否则会发送失败.

**********************************************************************************************************
6.g-sensor 模块调试.
只需要关注spi的通信模式即可.
spi配置部分的代码，同事已经配置OK.
**********************************************************************************************************


